on:
  workflow_dispatch:
env:
  solution: 'src\Xamarin.Demo\Xamarin.Demo.sln'
  buildPlatform: x86
  buildConfiguration: Release
  uwpPackages: ${{ github.workspace }}\uwp
  androidPackages: ${{ github.workspace }}\android
  testPackages: ${{ github.workspace }}\test
  appcenter-app-slug: daronyondem-MS/xamarin-demo
  appcenter-device-set-slug: daronyondem-MS/test-devices
  uwp_signer_certificate_path : ${{ github.workspace }}\src\Xamarin.Demo\self-signed-certs\Xamarin.Demo.App.UWP_TemporaryKey.pfx
  android_keystore_path : ${{ github.workspace }}\src\Xamarin.Demo\self-signed-certs\android-keystore.keystore
jobs:
  Build_Stage_Build_Android:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - uses: nuget/setup-nuget@v1
    - run: nuget restore ${{ env.solution }}
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
      # with:
      #       vs-version: '[16.0]'
    - name: build android
      # run: |
      #   msbuild 'src\Xamarin.Demo\Xamarin.Demo.App\Xamarin.Demo.App.Android\Xamarin.Demo.App.Android.csproj' /verbosity:normal /t:Rebuild /p:Configuration=${{ env.buildConfiguration }} /p:OutputPath=${{ env.androidPackages }} /t:PackageForAndroid /p:AndroidUseSharedRuntime=false 
      run: |
        msbuild '${{ github.workspace }}\src\Xamarin.Demo\Xamarin.Demo.App\Xamarin.Demo.App.Android\Xamarin.Demo.App.Android.csproj' /verbosity:normal /t:Rebuild /p:Configuration=${{ env.buildConfiguration }} /p:OutputPath=${{ env.androidPackages }} /t:SignAndroidPackage /p:AndroidKeyStore=true /p:AndroidSigningKeyAlias=${{ secrets.ANDROID_SIGNING_ALIAS }} /p:AndroidSigningKeyPass=${{ secrets.ANDROID_SIGNING_KEY_STORE_PASSWORD }} /p:AndroidSigningKeyStore=${{ env.android_keystore_path }} /p:AndroidSigningStorePass=${{ secrets.ANDROID_SIGNING_KEY_STORE_PASSWORD }}    
    # - uses: r0adkll/sign-android-release@v1.0.4
    #   name: Sign app APK
    #   with:
    #     releaseDirectory: ${{ env.androidPackages }}
    #     signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
    #     alias: ${{ secrets.ANDROID_SIGNING_ALIAS }}
    #     keyStorePassword: ${{ secrets.ANDROID_SIGNING_KEY_STORE_PASSWORD }}       
    - name: publish build outputs
      uses: actions/upload-artifact@v2
      with:
        path: ${{ env.androidPackages }}
        name: android

  Build_Stage_Build_UWP:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - uses: microsoft/setup-msbuild@v1.0.2
    - uses: nuget/setup-nuget@v1
    - run: nuget restore ${{ env.solution }}
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: build uwp
      run: msbuild 'src\Xamarin.Demo\Xamarin.Demo.App\Xamarin.Demo.App.UWP\Xamarin.Demo.App.UWP.csproj' /p:configuration='${{ env.buildConfiguration }}' /p:platform='x86' /p:AppxBundlePlatforms="${{ env.buildPlatform }}" /p:AppxPackageDir="${{ env.uwpPackages }}" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload /p:AppxPackageSigningEnabled=true /p:PackageCertificateThumbprint="4D3D3883BA7C0830B284B51842AFEA6EAF3CF79A" /p:PackageCertificateKeyFile="${{ env.uwp_signer_certificate_path}}" /p:PackageCertificatePassword="${{ secrets.UWP_SIGNER_KEY_PASSWORD }}"
    - name: publish build outputs
      uses: actions/upload-artifact@v2
      with:
        path: ${{ env.uwpPackages }}
        name: uwp
  Build_Stage_Build_UI_Test:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - uses: nuget/setup-nuget@v1
    - run: nuget restore ${{ env.solution }}
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: build ui tests
      run: msbuild 'src\Xamarin.Demo\Xamarin.Demo.App.UITest\Xamarin.Demo.App.UITest.csproj' /p:configuration='${{ env.buildConfiguration }}' /p:OutputPath="${{ env.testPackages }}"
    - name: publish build outputs
      uses: actions/upload-artifact@v2
      with:
        path: ${{ env.testPackages }}
        name: test
  Test_Stage_Run_Test_On_AppCenter:
    runs-on: windows-2019
    needs:
    - Build_Stage_Build_Android
    - Build_Stage_Build_UWP
    - Build_Stage_Build_UI_Test
    if: success()
    steps:
    - uses: actions/download-artifact@v3
      with:
        path: ${{ github.workspace }}
    - name: Install npm
      uses: actions/setup-node@v1
      with:
        node-version: 16.x
    - name: Install appcenter-cli
      run: npm install -g appcenter-cli
      shell: bash
    - name: Run tests on appcenter
      run: appcenter test run uitest --app '${{ env.appcenter-app-slug }}' --async --devices '${{ env.appcenter-device-set-slug }}' --app-path '${{ env.androidPackages }}\com.companyname.xamarin.demo.app.apk' --build-dir '${{ env.testPackages }}' --uitest-tools-dir '${{ env.testPackages }}' --token '${{ secrets.APP_CENTER_API_TOKEN }}'
      shell: bash
  Distribute_Android_Stage_Distribute_Android_AppCenter:
    runs-on: ubuntu-latest
    needs:
    - Test_Stage_Run_Test_On_AppCenter
    if: success()
    steps:
    - uses: actions/download-artifact@v3
      with:
        path: ${{ github.workspace }}
    - name: upload artifact to App Center
      uses: wzieba/AppCenter-Github-Action@v1
      with:
        appName: ${{ env.appcenter-app-slug }}
        token: ${{secrets.APP_CENTER_API_TOKEN}}
        group: Testers
        file: ${{ github.workspace }}\drop\android\com.companyname.xamarin.demo.app.apk
        notifyTesters: true
        debug: true
  Distribute_UWP_Stage_Distribute_UWP_AppCenter:
    runs-on: ubuntu-latest
    needs:
    - Test_Stage_Run_Test_On_AppCenter
    if: success()
    steps:
    - uses: actions/download-artifact@v3
      with:
        path: ${{ github.workspace }}