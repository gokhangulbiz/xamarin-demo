name: Build & Test on AppCenter
on:
  workflow_dispatch:
env:
  solution: 'src\Xamarin.Demo\Xamarin.Demo.sln'
  buildPlatform: x86
  buildConfiguration: Release 
  
  uwpPackages: ${{ github.workspace }}\uwp
  androidPackages: ${{ github.workspace }}\android
  testPackages: ${{ github.workspace }}\test
  
  androidProjectPath: ${{ github.workspace }}\src\Xamarin.Demo\Xamarin.Demo.App\Xamarin.Demo.App.Android\Xamarin.Demo.App.Android.csproj
  androidKeystorePath : ${{ github.workspace }}\android-keystore.keystore.b64
  
  uwpProjectPath: src\Xamarin.Demo\Xamarin.Demo.App\Xamarin.Demo.App.UWP\Xamarin.Demo.App.UWP.csproj
  uwpCertificatePath : ${{ github.workspace }}\Xamarin.Demo.App.UWP_TemporaryKey.pfx.b64
  
  testProjectPath: 'src\Xamarin.Demo\Xamarin.Demo.App.UITest\Xamarin.Demo.App.UITest.csproj'
    
  appcenterAndroidAppSlug: daronyondem-MS/xamarin-demo
  appcenterAndroidDeviceSetSlug: daronyondem-MS/test-devices
  appcenterUwpAppSlug: daronyondem-MS/uwp-demo/

jobs:
  Build_Stage_Build_Android:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - uses: nuget/setup-nuget@v1
    - run: nuget restore ${{ env.solution }}
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: Get secret from base64     
      env:
        base64Content: ${{ secrets.ANDROID_SIGNING_KEY_BASE64 }}
        filePath: ${{ env.androidKeystorePath }}
      run: |
        echo $Env:base64Content > data.b64 
        certutil -decode data.b64 $Env:filePath
    - name: build android
      run: |
        msbuild '${{ env.androidProjectPath }}' /verbosity:normal /t:Rebuild /p:Configuration=${{ env.buildConfiguration }} /p:OutputPath=${{ env.androidPackages }} /t:SignAndroidPackage /p:AndroidKeyStore=true /p:AndroidSigningKeyAlias=${{ secrets.ANDROID_SIGNING_KEY_ALIAS }} /p:AndroidSigningKeyPass=${{ secrets.ANDROID_SIGNING_KEY_STORE_PASSWORD }} /p:AndroidSigningKeyStore=${{ env.androidKeystorePath }} /p:AndroidSigningStorePass=${{ secrets.ANDROID_SIGNING_KEY_STORE_PASSWORD }}    
    - name: publish build outputs
      uses: actions/upload-artifact@v2
      with:
        path: ${{ env.androidPackages }}
        name: android
  Build_Stage_Build_UWP:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - uses: microsoft/setup-msbuild@v1.0.2
    - uses: nuget/setup-nuget@v1
    - run: nuget restore ${{ env.solution }}
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: Get secret from base64
      env:
        base64Content: ${{ secrets.UWP_CERTIFICATE_BASE64 }}
        filePath: ${{ env.uwpCertificatePath}}
      run: |
        echo $Env:base64Content > data.b64 
        certutil -decode data.b64 $Env:filePath
    - name: build uwp
      run: msbuild '${{ env.uwpProjectPath }}' /p:configuration='${{ env.buildConfiguration }}' /p:platform='x86' /p:AppxBundlePlatforms="${{ env.buildPlatform }}" /p:AppxPackageDir="${{ env.uwpPackages }}" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload /p:AppxPackageSigningEnabled=true /p:PackageCertificateThumbprint="4D3D3883BA7C0830B284B51842AFEA6EAF3CF79A" /p:PackageCertificateKeyFile="${{ env.uwpCertificatePath}}" /p:PackageCertificatePassword="${{ secrets.UWP_CERTIFICATE_PASSWORD }}"
    - name: publish build outputs
      uses: actions/upload-artifact@v2
      with:
        path: ${{ env.uwpPackages }}
        name: uwp
  Build_Stage_Build_UI_Test:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - uses: nuget/setup-nuget@v1
    - run: nuget restore ${{ env.solution }}
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: build ui tests
      run: msbuild '${{ env.testProjectPath }}' /p:configuration='${{ env.buildConfiguration }}' /p:OutputPath="${{ env.testPackages }}"
    - name: publish build outputs
      uses: actions/upload-artifact@v2
      with:
        path: ${{ env.testPackages }}
        name: test
  Test_Stage_Run_Test_On_AppCenter:
    runs-on: windows-2019
    needs:
    - Build_Stage_Build_Android
    - Build_Stage_Build_UWP
    - Build_Stage_Build_UI_Test
    if: success()
    steps:
    - uses: actions/download-artifact@v3
      with:
        path: ${{ github.workspace }}
    - name: Install npm
      uses: actions/setup-node@v1
      with:
        node-version: 16.x
    - name: Install appcenter-cli
      run: npm install -g appcenter-cli
      shell: bash
    - name: Run tests on appcenter
      run: appcenter test run uitest --app '${{ env.appcenterAndroidAppSlug }}' --devices '${{ env.appcenterAndroidDeviceSetSlug }}' --app-path '${{ env.androidPackages }}\com.companyname.xamarin.demo.app.apk' --build-dir '${{ env.testPackages }}' --uitest-tools-dir '${{ env.testPackages }}' --token '${{ secrets.APP_CENTER_API_TOKEN }}'
      shell: bash
  Distribute_Android_Stage_Distribute_Android_AppCenter:
    runs-on: ubuntu-latest
    needs:
    - Test_Stage_Run_Test_On_AppCenter
    if: success()
    steps:
    - uses: actions/download-artifact@v3
      with:
        path: ${{ github.workspace }}
    - name: upload artifact to App Center
      uses: wzieba/AppCenter-Github-Action@v1
      with:
        appName: ${{ env.appcenterAndroidAppSlug }}
        token: ${{secrets.APP_CENTER_API_TOKEN}}
        file: ${{ env.androidPackages }}\com.companyname.xamarin.demo.app.apk
        notifyTesters: true
        debug: true
  Distribute_UWP_Stage_Distribute_UWP_AppCenter:
    runs-on: ubuntu-latest
    needs:
    - Test_Stage_Run_Test_On_AppCenter
    if: success()
    steps:
    - uses: actions/download-artifact@v3
      with:
        path: ${{ github.workspace }}
    - name: upload artifact to App Center
      uses: wzieba/AppCenter-Github-Action@v1
      with:
        appName: ${{ env.appcenterUwpAppSlug }}
        token: ${{secrets.APP_CENTER_API_TOKEN}}
        file: ${{ env.uwpPackages }}\Xamarin.Demo.App.UWP_1.0.0.0_Test\Xamarin.Demo.App.UWP_1.0.0.0_x86.appxbundle
        notifyTesters: true
        debug: true
